@import '../../../../theme';

.modal.dynamic-host-component {
  .modal-content {
    border-radius: unset;
    padding: 0px;

    .modal-header,
    .modal-body,
    .modal-footer {
      margin-left: 40px;
    }

    .modal-header,
    .modal-body {
      padding-left: 18px;
      padding-bottom: 20px;
      padding-right: 18px;
    }

    .modal-no-action-buttons.modal-header,
    .modal-no-action-buttons.modal-body {
      padding-left: 0px !important;
    }

    .modal-no-action-buttons.modal-footer {
      margin-left: 0px !important;
    }

    .modal-header {
      padding-bottom: 0px;
      padding-top: 20px;
      padding-right: 24px;
      .modal-title {
        padding-left: 0px;
        font-weight: 500;
      }
    }

    .modal-body {
      padding-top: 10px;
    }

    .modal-footer {
      -webkit-box-pack: end;
      -ms-flex-pack: end;
      justify-content: flex-end;
      border-top: 1px solid $color-border-dialog;
      padding-top: 12px;
      padding-bottom: 13px;
      padding-right: 18px;
    }

    .modal-sidenav {
      position: absolute;
      top: 0;
      width: 40px;
      bottom: 0;
      left: 0;
      padding-top: 12px;
      border: solid 1px $color-head;
      border-width: 0 1px 0 0;

      .btn.btn-link {
        color: $color-black !important;
        height: 40px !important;
        width: 40px;
        margin: 0;
        border: unset;
        padding: unset;
        clr-icon {
          margin-right: 0px;
        }
      }
    }
  }

  // Applies a grabbing hand on top of the div that's draggable
  .cursor-draggable {
    cursor: grab;
  }
  //  Apply a "closed-hand" cursor during drag operation.
  .cursor-draggable:active {
    cursor: grabbing;
  }

  // NgResizable
  .ngr-grabber {
    position: absolute;
  }

  .ngr-grabber.ngr-top, .ngr-grabber.ngr-bottom {
    cursor: ns-resize;
    width: 100%;
    height: 14px;
  }

  .ngr-grabber.ngr-left, .ngr-grabber.ngr-right {
    cursor: ew-resize;
    width: 14px;
    height: 100%;
  }

  .ngr-grabber.ngr-top::after, .ngr-grabber.ngr-bottom::after,
  .ngr-grabber.ngr-left::after, .ngr-grabber.ngr-right::after,
  .ngr-grabber.ngr-top::before, .ngr-grabber.ngr-bottom::before,
  .ngr-grabber.ngr-left::before, .ngr-grabber.ngr-right::before {
    content: "";
    position: absolute;
    z-index: 1;
  }

  .ngr-grabber.ngr-top::before, .ngr-grabber.ngr-bottom::before,
  .ngr-grabber.ngr-left::before, .ngr-grabber.ngr-right::before {
    border-radius: 7px;
    width: 7px;
    height: 7px;
  }

  .ngr-grabber.ngr-top::after, .ngr-grabber.ngr-bottom::after {
    width: 100%;
    height: 2px;
    top: 50%;
    left: 0;
  }

  .ngr-grabber.ngr-left::after, .ngr-grabber.ngr-right::after {
    width: 2px;
    height: 100%;
    left: 50%;
  }

  .ngr-grabber.ngr-top::before, .ngr-grabber.ngr-bottom::before {
    left: 50%;
    top: 4px;
    transform: translateX(-50%);
  }

  .ngr-grabber.ngr-left::before, .ngr-grabber.ngr-right::before {
    top: 50%;
    left: 4px;
    transform: translateY(-50%);
  }

  .ngr-grabber.ngr-top,
  .ngr-grabber.ngr-bottom {
    left: 0;
  }

  .ngr-grabber.ngr-top {
    top: -7px;
  }

  .ngr-grabber.ngr-bottom {
    bottom: -7px;
  }

  .ngr-grabber.ngr-left,
  .ngr-grabber.ngr-right {
    top: 0;
  }

  .ngr-grabber.ngr-left {
    left: -7px;
  }

  .ngr-grabber.ngr-right {
    right: -7px;
  }

  .ngr-grabber.ngr-top-left, .ngr-grabber.ngr-top-right,
  .ngr-grabber.ngr-bottom-left, .ngr-grabber.ngr-bottom-right {
    position: absolute;
    width: 12px;
    height: 12px;
    border-radius: 4px;
    z-index: 1;
  }

  .ngr-grabber.ngr-top-left {
    cursor: nwse-resize;
    top: -5px;
    left: -5px;
  }

  .ngr-grabber.ngr-top-right {
    cursor: nesw-resize;
    top: -5px;
    right: -5px;
  }

  .ngr-grabber.ngr-bottom-left {
    cursor: nesw-resize;
    bottom: -5px;
    left: -5px;
  }

  .ngr-grabber.ngr-bottom-right {
    cursor: nwse-resize;
    bottom: -5px;
    right: -5px;
  }
}

